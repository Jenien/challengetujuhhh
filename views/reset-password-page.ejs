<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Password</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h2>Reset Your Password</h2>
    
    <form action="/api/v1/auth/reset-password?token=<%= token %>" method="post">
       
        <input type="hidden" id="token" name="token" value="<%= token %>">
        <input type="password" id="newPassword" name="newPassword" placeholder="Enter New Password">
        <button type="submit" onclick="handleSubmit(event)">Reset Password</button>
    </form>
    
    <form>
        <p> </p>
    <div id="notificationContainer"></div>
    </form>
    <script>
        const socket = io(); 

   
        socket.on('notification', (notificationData) => {
            
            const notificationContainer = document.getElementById('notificationContainer');
            const newNotification = document.createElement('div');
            newNotification.textContent = 'ini Notifikasi :  ' + notificationData.message;
            notificationContainer.appendChild(newNotification);
        });
        const handleSubmit = async (event) => {
            event.preventDefault();
            const newPassword = document.getElementById('newPassword').value;
            const token = document.getElementById('token').value;

            try {
                const response = await fetch(`/api/v1/auth/reset-password?token=${token}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ newPassword }),
                });

                
                const data = await response.json();
                console.log(data);
                if (data.status) {
                    alert(data.message); 
                    const notificationData = {
                    type: 'resetPassword',
                    message: 'Password reset berhasil, silahkan login dengan password baru.',
                    };
                    socket.emit('notification', notificationData);
                } else {
                    alert(data.message); 
                }
            } catch (error) {
                console.error('Error:', error);
            }
        };
    </script>
</body>
</html>
